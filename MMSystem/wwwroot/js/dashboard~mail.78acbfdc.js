(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["dashboard~mail"],{"33e1":function(e,t,o){"use strict";var n;o.d(t,"a",(function(){return n})),function(e){e[e["Trace"]=0]="Trace",e[e["Debug"]=1]="Debug",e[e["Information"]=2]="Information",e[e["Warning"]=3]="Warning",e[e["Error"]=4]="Error",e[e["Critical"]=5]="Critical",e[e["None"]=6]="None"}(n||(n={}))},"7ed1":function(e,t,o){"use strict";(function(e,n){o.d(t,"a",(function(){return a})),o.d(t,"c",(function(){return c})),o.d(t,"f",(function(){return l})),o.d(t,"j",(function(){return u})),o.d(t,"k",(function(){return g})),o.d(t,"e",(function(){return d})),o.d(t,"d",(function(){return p})),o.d(t,"b",(function(){return _})),o.d(t,"i",(function(){return f})),o.d(t,"g",(function(){return v})),o.d(t,"h",(function(){return S}));var r=o("33e1"),s=o("bf71");const i="6.0.4";class a{static isRequired(e,t){if(null===e||void 0===e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,o){if(!(e in t))throw new Error(`Unknown ${o} value: ${e}.`)}}class c{static get isBrowser(){return"object"===typeof window&&"object"===typeof window.document}static get isWebWorker(){return"object"===typeof self&&"importScripts"in self}static get isReactNative(){return"object"===typeof window&&"undefined"===typeof window.document}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function l(e,t){let o="";return u(e)?(o="Binary data of length "+e.byteLength,t&&(o+=`. Content: '${h(e)}'`)):"string"===typeof e&&(o="String data of length "+e.length,t&&(o+=`. Content: '${e}'`)),o}function h(e){const t=new Uint8Array(e);let o="";return t.forEach(e=>{const t=e<16?"0":"";o+=`0x${t}${e.toString(16)} `}),o.substr(0,o.length-1)}function u(e){return e&&"undefined"!==typeof ArrayBuffer&&(e instanceof ArrayBuffer||e.constructor&&"ArrayBuffer"===e.constructor.name)}async function g(e,t,o,n,s,i,a){let c={};if(s){const e=await s();e&&(c={["Authorization"]:"Bearer "+e})}const[h,g]=f();c[h]=g,e.log(r["a"].Trace,`(${t} transport) sending data. ${l(i,a.logMessageContent)}.`);const d=u(i)?"arraybuffer":"text",p=await o.post(n,{content:i,headers:{...c,...a.headers},responseType:d,timeout:a.timeout,withCredentials:a.withCredentials});e.log(r["a"].Trace,`(${t} transport) request complete. Response status: ${p.statusCode}.`)}function d(e){return void 0===e?new _(r["a"].Information):null===e?s["a"].instance:void 0!==e.log?e:new _(e)}class p{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(e=>{})}}class _{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const o=`[${(new Date).toISOString()}] ${r["a"][e]}: ${t}`;switch(e){case r["a"].Critical:case r["a"].Error:this.out.error(o);break;case r["a"].Warning:this.out.warn(o);break;case r["a"].Information:this.out.info(o);break;default:this.out.log(o);break}}}}function f(){let e="X-SignalR-User-Agent";return c.isNode&&(e="User-Agent"),[e,m(i,w(),y(),b())]}function m(e,t,o,n){let r="Microsoft SignalR/";const s=e.split(".");return r+=`${s[0]}.${s[1]}`,r+=` (${e}; `,r+=t&&""!==t?t+"; ":"Unknown OS; ",r+=""+o,r+=n?"; "+n:"; Unknown Runtime Version",r+=")",r}function w(){if(!c.isNode)return"";switch(e.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return e.platform}}function b(){if(c.isNode)return e.versions.node}function y(){return c.isNode?"NodeJS":"Browser"}function v(e){return e.stack?e.stack:e.message?e.message:""+e}function S(){if("undefined"!==typeof globalThis)return globalThis;if("undefined"!==typeof self)return self;if("undefined"!==typeof window)return window;if("undefined"!==typeof n)return n;throw new Error("could not find global")}}).call(this,o("4362"),o("c8ba"))},bad4:function(e,t,o){"use strict";o.d(t,"a",(function(){return J}));const n=[0,2e3,1e4,3e4,null];class r{constructor(e){this._retryDelays=void 0!==e?[...e,null]:n}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class s extends Error{constructor(e,t){const o=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=o}}class i extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class a extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class c extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=o}}class l extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=o}}class h extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=o}}class u extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class g extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=o}}class d{constructor(e,t,o){this.statusCode=e,this.statusText=t,this.content=o}}class p{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}var _,f,m=o("33e1"),w=o("7ed1");class b extends p{constructor(e){if(super(),this._logger=e,"undefined"===typeof fetch){const e=require;this._jar=new(e("tough-cookie").CookieJar),this._fetchType=e("node-fetch"),this._fetchType=e("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(Object(w["h"])());if("undefined"===typeof AbortController){const e=require;this._abortControllerType=e("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new a;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let o;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),o=new a});let n,r=null;if(e.timeout){const n=e.timeout;r=setTimeout(()=>{t.abort(),this._logger.log(m["a"].Warning,"Timeout from HTTP request."),o=new i},n)}try{n=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(h){if(o)throw o;throw this._logger.log(m["a"].Warning,`Error from HTTP request. ${h}.`),h}finally{r&&clearTimeout(r),e.abortSignal&&(e.abortSignal.onabort=null)}if(!n.ok){const e=await y(n,"text");throw new s(e||n.statusText,n.status)}const c=y(n,e.responseType),l=await c;return new d(n.status,n.statusText,l)}getCookieString(e){let t="";return w["c"].isNode&&this._jar&&this._jar.getCookies(e,(e,o)=>t=o.join("; ")),t}}function y(e,t){let o;switch(t){case"arraybuffer":o=e.arrayBuffer();break;case"text":o=e.text();break;case"blob":case"document":case"json":throw new Error(t+" is not supported.");default:o=e.text();break}return o}class v extends p{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new a):e.method?e.url?new Promise((t,o)=>{const n=new XMLHttpRequest;n.open(e.method,e.url,!0),n.withCredentials=void 0===e.withCredentials||e.withCredentials,n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const r=e.headers;r&&Object.keys(r).forEach(e=>{n.setRequestHeader(e,r[e])}),e.responseType&&(n.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),o(new a)}),e.timeout&&(n.timeout=e.timeout),n.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),n.status>=200&&n.status<300?t(new d(n.status,n.statusText,n.response||n.responseText)):o(new s(n.response||n.responseText||n.statusText,n.status))},n.onerror=()=>{this._logger.log(m["a"].Warning,`Error from HTTP request. ${n.status}: ${n.statusText}.`),o(new s(n.statusText,n.status))},n.ontimeout=()=>{this._logger.log(m["a"].Warning,"Timeout from HTTP request."),o(new i)},n.send(e.content||"")}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class S extends p{constructor(e){if(super(),"undefined"!==typeof fetch||w["c"].isNode)this._httpClient=new b(e);else{if("undefined"===typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this._httpClient=new v(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new a):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class C{}C.Authorization="Authorization",C.Cookie="Cookie",function(e){e[e["None"]=0]="None",e[e["WebSockets"]=1]="WebSockets",e[e["ServerSentEvents"]=2]="ServerSentEvents",e[e["LongPolling"]=4]="LongPolling"}(_||(_={})),function(e){e[e["Text"]=1]="Text",e[e["Binary"]=2]="Binary"}(f||(f={}));class k{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class E{constructor(e,t,o,n){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._pollAbort=new k,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(w["a"].isRequired(e,"url"),w["a"].isRequired(t,"transferFormat"),w["a"].isIn(t,f,"transferFormat"),this._url=e,this._logger.log(m["a"].Trace,"(LongPolling transport) Connecting."),t===f.Binary&&"undefined"!==typeof XMLHttpRequest&&"string"!==typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,n]=Object(w["i"])(),r={[o]:n,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:r,timeout:1e5,withCredentials:this._options.withCredentials};t===f.Binary&&(i.responseType="arraybuffer");const a=await this._getAccessToken();this._updateHeaderToken(i,a);const c=`${e}&_=${Date.now()}`;this._logger.log(m["a"].Trace,`(LongPolling transport) polling: ${c}.`);const l=await this._httpClient.get(c,i);200!==l.statusCode?(this._logger.log(m["a"].Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this._closeError=new s(l.statusText||"",l.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){e.headers||(e.headers={}),t?e.headers[C.Authorization]="Bearer "+t:e.headers[C.Authorization]&&delete e.headers[C.Authorization]}async _poll(e,t){try{while(this._running){const n=await this._getAccessToken();this._updateHeaderToken(t,n);try{const o=`${e}&_=${Date.now()}`;this._logger.log(m["a"].Trace,`(LongPolling transport) polling: ${o}.`);const n=await this._httpClient.get(o,t);204===n.statusCode?(this._logger.log(m["a"].Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==n.statusCode?(this._logger.log(m["a"].Error,`(LongPolling transport) Unexpected response code: ${n.statusCode}.`),this._closeError=new s(n.statusText||"",n.statusCode),this._running=!1):n.content?(this._logger.log(m["a"].Trace,`(LongPolling transport) data received. ${Object(w["f"])(n.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(n.content)):this._logger.log(m["a"].Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(o){this._running?o instanceof i?this._logger.log(m["a"].Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=o,this._running=!1):this._logger.log(m["a"].Trace,"(LongPolling transport) Poll errored after shutdown: "+o.message)}}}finally{this._logger.log(m["a"].Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?Object(w["k"])(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(m["a"].Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(m["a"].Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,o]=Object(w["i"])();e[t]=o;const n={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},r=await this._getAccessToken();this._updateHeaderToken(n,r),await this._httpClient.delete(this._url,n),this._logger.log(m["a"].Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(m["a"].Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(m["a"].Trace,e),this.onclose(this._closeError)}}}class T{constructor(e,t,o,n){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._options=n,this.onreceive=null,this.onclose=null}async connect(e,t){if(w["a"].isRequired(e,"url"),w["a"].isRequired(t,"transferFormat"),w["a"].isIn(t,f,"transferFormat"),this._logger.log(m["a"].Trace,"(SSE transport) Connecting."),this._url=e,this._accessTokenFactory){const t=await this._accessTokenFactory();t&&(e+=(e.indexOf("?")<0?"?":"&")+"access_token="+encodeURIComponent(t))}return new Promise((o,n)=>{let r,s=!1;if(t===f.Text){if(w["c"].isBrowser||w["c"].isWebWorker)r=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const t=this._httpClient.getCookieString(e),o={};o.Cookie=t;const[n,s]=Object(w["i"])();o[n]=s,r=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...o,...this._options.headers}})}try{r.onmessage=e=>{if(this.onreceive)try{this._logger.log(m["a"].Trace,`(SSE transport) data received. ${Object(w["f"])(e.data,this._options.logMessageContent)}.`),this.onreceive(e.data)}catch(t){return void this._close(t)}},r.onerror=e=>{s?this._close():n(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},r.onopen=()=>{this._logger.log(m["a"].Information,"SSE connected to "+this._url),this._eventSource=r,s=!0,o()}}catch(i){return void n(i)}}else n(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))})}async send(e){return this._eventSource?Object(w["k"])(this._logger,"SSE",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class I{constructor(e,t,o,n,r,s){this._logger=o,this._accessTokenFactory=t,this._logMessageContent=n,this._webSocketConstructor=r,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=s}async connect(e,t){if(w["a"].isRequired(e,"url"),w["a"].isRequired(t,"transferFormat"),w["a"].isIn(t,f,"transferFormat"),this._logger.log(m["a"].Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory){const t=await this._accessTokenFactory();t&&(e+=(e.indexOf("?")<0?"?":"&")+"access_token="+encodeURIComponent(t))}return new Promise((o,n)=>{let r;e=e.replace(/^http/,"ws");const s=this._httpClient.getCookieString(e);let i=!1;if(w["c"].isNode){const t={},[o,n]=Object(w["i"])();t[o]=n,s&&(t[C.Cookie]=""+s),r=new this._webSocketConstructor(e,void 0,{headers:{...t,...this._headers}})}r||(r=new this._webSocketConstructor(e)),t===f.Binary&&(r.binaryType="arraybuffer"),r.onopen=t=>{this._logger.log(m["a"].Information,`WebSocket connected to ${e}.`),this._webSocket=r,i=!0,o()},r.onerror=e=>{let t=null;t="undefined"!==typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"There was an error with the transport",this._logger.log(m["a"].Information,`(WebSockets transport) ${t}.`)},r.onmessage=e=>{if(this._logger.log(m["a"].Trace,`(WebSockets transport) data received. ${Object(w["f"])(e.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(e.data)}catch(t){return void this._close(t)}},r.onclose=e=>{if(i)this._close(e);else{let t=null;t="undefined"!==typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",n(new Error(t))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(m["a"].Trace,`(WebSockets transport) sending data. ${Object(w["f"])(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(m["a"].Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"===typeof e.wasClean&&"number"===typeof e.code}}const P=100;class x{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,w["a"].isRequired(e,"url"),this._logger=Object(w["e"])(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!==typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let o=null,n=null;if(w["c"].isNode){const e=require;o=e("ws"),n=e("eventsource")}w["c"].isNode||"undefined"===typeof WebSocket||t.WebSocket?w["c"].isNode&&!t.WebSocket&&o&&(t.WebSocket=o):t.WebSocket=WebSocket,w["c"].isNode||"undefined"===typeof EventSource||t.EventSource?w["c"].isNode&&!t.EventSource&&"undefined"!==typeof n&&(t.EventSource=n):t.EventSource=EventSource,this._httpClient=t.httpClient||new S(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||f.Binary,w["a"].isIn(e,f,"transferFormat"),this._logger.log(m["a"].Debug,`Starting connection with transfer format '${f[e]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,"Disconnecting"===this._connectionState){const e="Failed to start the HttpConnection before stop() was called.";return this._logger.log(m["a"].Error,e),await this._stopPromise,Promise.reject(new Error(e))}if("Connected"!==this._connectionState){const e="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(m["a"].Error,e),Promise.reject(new Error(e))}this._connectionStarted=!0}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new D(this.transport)),this._sendQueue.send(e))}async stop(e){return"Disconnected"===this._connectionState?(this._logger.log(m["a"].Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(m["a"].Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState="Disconnecting",this._stopPromise=new Promise(e=>{this._stopPromiseResolver=e}),await this._stopInternal(e),void await this._stopPromise)}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch(t){}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(m["a"].Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(m["a"].Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport!==_.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this._constructTransport(_.WebSockets),await this._startTransport(t,e)}else{let o=null,n=0;do{if(o=await this._getNegotiationResponse(t),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw new Error("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(t=o.url),o.accessToken){const e=o.accessToken;this._accessTokenFactory=()=>e}n++}while(o.url&&n<P);if(n===P&&o.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,o,e)}this.transport instanceof E&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(m["a"].Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(o){return this._logger.log(m["a"].Error,"Failed to start the connection: "+o),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(o)}}async _getNegotiationResponse(e){const t={};if(this._accessTokenFactory){const e=await this._accessTokenFactory();e&&(t[C.Authorization]="Bearer "+e)}const[o,n]=Object(w["i"])();t[o]=n;const r=this._resolveNegotiateUrl(e);this._logger.log(m["a"].Debug,`Sending negotiation request: ${r}.`);try{const e=await this._httpClient.post(r,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==e.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${e.statusCode}'`));const o=JSON.parse(e.content);return(!o.negotiateVersion||o.negotiateVersion<1)&&(o.connectionToken=o.connectionId),o}catch(i){let e="Failed to complete negotiation with the server: "+i;return i instanceof s&&404===i.statusCode&&(e+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(m["a"].Error,e),Promise.reject(new u(e))}}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+"id="+t:e}async _createTransport(e,t,o,n){let r=this._createConnectUrl(e,o.connectionToken);if(this._isITransport(t))return this._logger.log(m["a"].Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(r,n),void(this.connectionId=o.connectionId);const s=[],i=o.availableTransports||[];let a=o;for(const l of i){const o=this._resolveTransportOrError(l,t,n);if(o instanceof Error)s.push(l.transport+" failed:"),s.push(o);else if(this._isITransport(o)){if(this.transport=o,!a){try{a=await this._getNegotiationResponse(e)}catch(c){return Promise.reject(c)}r=this._createConnectUrl(e,a.connectionToken)}try{return await this._startTransport(r,n),void(this.connectionId=a.connectionId)}catch(c){if(this._logger.log(m["a"].Error,`Failed to start the transport '${l.transport}': ${c}`),a=void 0,s.push(new h(`${l.transport} failed: ${c}`,_[l.transport])),"Connecting"!==this._connectionState){const e="Failed to select transport before stop() was called.";return this._logger.log(m["a"].Debug,e),Promise.reject(new Error(e))}}}}return s.length>0?Promise.reject(new g("Unable to connect to the server with any of the available transports. "+s.join(" "),s)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case _.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new I(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case _.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new T(this._httpClient,this._accessTokenFactory,this._logger,this._options);case _.LongPolling:return new E(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=e=>this._stopConnection(e),this.transport.connect(e,t)}_resolveTransportOrError(e,t,o){const n=_[e.transport];if(null===n||void 0===n)return this._logger.log(m["a"].Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!$(t,n))return this._logger.log(m["a"].Debug,`Skipping transport '${_[n]}' because it was disabled by the client.`),new l(`'${_[n]}' is disabled by the client.`,n);{const t=e.transferFormats.map(e=>f[e]);if(!(t.indexOf(o)>=0))return this._logger.log(m["a"].Debug,`Skipping transport '${_[n]}' because it does not support the requested transfer format '${f[o]}'.`),new Error(`'${_[n]}' does not support ${f[o]}.`);if(n===_.WebSockets&&!this._options.WebSocket||n===_.ServerSentEvents&&!this._options.EventSource)return this._logger.log(m["a"].Debug,`Skipping transport '${_[n]}' because it is not supported in your environment.'`),new c(`'${_[n]}' is not supported in your environment.`,n);this._logger.log(m["a"].Debug,`Selecting transport '${_[n]}'.`);try{return this._constructTransport(n)}catch(r){return r}}}_isITransport(e){return e&&"object"===typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(m["a"].Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(m["a"].Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(m["a"].Error,`Connection disconnected with error '${e}'.`):this._logger.log(m["a"].Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(e=>{this._logger.log(m["a"].Error,`TransportSendQueue.stop() threw error '${e}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(m["a"].Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(m["a"].Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!w["c"].isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(m["a"].Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let o=e.substring(0,-1===t?e.length:t);return"/"!==o[o.length-1]&&(o+="/"),o+="negotiate",o+=-1===t?"":e.substring(t),-1===o.indexOf("negotiateVersion")&&(o+=-1===t?"?":"&",o+="negotiateVersion="+this._negotiateVersion),o}}function $(e,t){return!e||0!==(t&e)}class D{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new R,this._transportResult=new R,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new R),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!==typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){while(1){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new R;const t=this._transportResult;this._transportResult=void 0;const o="string"===typeof this._buffer[0]?this._buffer.join(""):D._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(o),t.resolve()}catch(e){t.reject(e)}}}static _concatBuffers(e){const t=e.map(e=>e.byteLength).reduce((e,t)=>e+t),o=new Uint8Array(t);let n=0;for(const r of e)o.set(new Uint8Array(r),n),n+=r.byteLength;return o.buffer}}class R{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class j{static write(e){return`${e}${j.RecordSeparator}`}static parse(e){if(e[e.length-1]!==j.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(j.RecordSeparator);return t.pop(),t}}j.RecordSeparatorCode=30,j.RecordSeparator=String.fromCharCode(j.RecordSeparatorCode);class H{writeHandshakeRequest(e){return j.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,o;if(Object(w["j"])(e)){const n=new Uint8Array(e),r=n.indexOf(j.RecordSeparatorCode);if(-1===r)throw new Error("Message is incomplete.");const s=r+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(n.slice(0,s))),o=n.byteLength>s?n.slice(s).buffer:null}else{const n=e,r=n.indexOf(j.RecordSeparator);if(-1===r)throw new Error("Message is incomplete.");const s=r+1;t=n.substring(0,s),o=n.length>s?n.substring(s):null}const n=j.parse(t),r=JSON.parse(n[0]);if(r.type)throw new Error("Expected a handshake response from the server.");const s=r;return[o,s]}}var M;(function(e){e[e["Invocation"]=1]="Invocation",e[e["StreamItem"]=2]="StreamItem",e[e["Completion"]=3]="Completion",e[e["StreamInvocation"]=4]="StreamInvocation",e[e["CancelInvocation"]=5]="CancelInvocation",e[e["Ping"]=6]="Ping",e[e["Close"]=7]="Close"})(M||(M={}));class W{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new w["d"](this,e)}}const L=3e4,A=15e3;var N;(function(e){e["Disconnected"]="Disconnected",e["Connecting"]="Connecting",e["Connected"]="Connected",e["Disconnecting"]="Disconnecting",e["Reconnecting"]="Reconnecting"})(N||(N={}));class O{constructor(e,t,o,n){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(m["a"].Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},w["a"].isRequired(e,"connection"),w["a"].isRequired(t,"logger"),w["a"].isRequired(o,"protocol"),this.serverTimeoutInMilliseconds=L,this.keepAliveIntervalInMilliseconds=A,this._logger=t,this._protocol=o,this.connection=e,this._reconnectPolicy=n,this._handshakeProtocol=new H,this.connection.onreceive=e=>this._processIncomingData(e),this.connection.onclose=e=>this._connectionClosed(e),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=N.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:M.Ping})}static create(e,t,o,n){return new O(e,t,o,n)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==N.Disconnected&&this._connectionState!==N.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==N.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=N.Connecting,this._logger.log(m["a"].Debug,"Starting HubConnection.");try{await this._startInternal(),w["c"].isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=N.Connected,this._connectionStarted=!0,this._logger.log(m["a"].Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=N.Disconnected,this._logger.log(m["a"].Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise((e,t)=>{this._handshakeResolver=e,this._handshakeRejecter=t});await this.connection.start(this._protocol.transferFormat);try{const t={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(m["a"].Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(m["a"].Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError}catch(t){throw this._logger.log(m["a"].Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){const e=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch(t){}}_stopInternal(e){return this._connectionState===N.Disconnected?(this._logger.log(m["a"].Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===N.Disconnecting?(this._logger.log(m["a"].Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=N.Disconnecting,this._logger.log(m["a"].Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(m["a"].Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[o,n]=this._replaceStreamingParams(t),r=this._createStreamInvocation(e,t,n);let s;const i=new W;return i.cancelCallback=()=>{const e=this._createCancelInvocation(r.invocationId);return delete this._callbacks[r.invocationId],s.then(()=>this._sendWithProtocol(e))},this._callbacks[r.invocationId]=(e,t)=>{t?i.error(t):e&&(e.type===M.Completion?e.error?i.error(new Error(e.error)):i.complete():i.next(e.item))},s=this._sendWithProtocol(r).catch(e=>{i.error(e),delete this._callbacks[r.invocationId]}),this._launchStreams(o,s),i}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[o,n]=this._replaceStreamingParams(t),r=this._sendWithProtocol(this._createInvocation(e,t,!0,n));return this._launchStreams(o,r),r}invoke(e,...t){const[o,n]=this._replaceStreamingParams(t),r=this._createInvocation(e,t,!1,n),s=new Promise((e,t)=>{this._callbacks[r.invocationId]=(o,n)=>{n?t(n):o&&(o.type===M.Completion?o.error?t(new Error(o.error)):e(o.result):t(new Error("Unexpected message type: "+o.type)))};const n=this._sendWithProtocol(r).catch(e=>{t(e),delete this._callbacks[r.invocationId]});this._launchStreams(o,n)});return s}on(e,t){e&&t&&(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const o=this._methods[e];if(o)if(t){const n=o.indexOf(t);-1!==n&&(o.splice(n,1),0===o.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const o=this._protocol.parseMessages(e,this._logger);for(const e of o)switch(e.type){case M.Invocation:this._invokeClientMethod(e);break;case M.StreamItem:case M.Completion:{const o=this._callbacks[e.invocationId];if(o){e.type===M.Completion&&delete this._callbacks[e.invocationId];try{o(e)}catch(t){this._logger.log(m["a"].Error,"Stream callback threw error: "+Object(w["g"])(t))}}break}case M.Ping:break;case M.Close:{this._logger.log(m["a"].Information,"Close message received from server.");const t=e.error?new Error("Server returned an error on close: "+e.error):void 0;!0===e.allowReconnect?this.connection.stop(t):this._stopPromise=this._stopInternal(t);break}default:this._logger.log(m["a"].Warning,`Invalid message type: ${e.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,o;try{[o,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(n){const e="Error parsing handshake response: "+n;this._logger.log(m["a"].Error,e);const t=new Error(e);throw this._handshakeRejecter(t),t}if(t.error){const e="Server returned handshake error: "+t.error;this._logger.log(m["a"].Error,e);const o=new Error(e);throw this._handshakeRejecter(o),o}return this._logger.log(m["a"].Debug,"Server handshake complete."),this._handshakeResolver(),o}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0===this._pingServerHandle)){let e=this._nextKeepAlive-(new Date).getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===N.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){const t=this._methods[e.target.toLowerCase()];if(t){try{t.forEach(t=>t.apply(this,e.arguments))}catch(o){this._logger.log(m["a"].Error,`A callback for the method ${e.target.toLowerCase()} threw error '${o}'.`)}if(e.invocationId){const e="Server requested a response, which is not supported in this version of the client.";this._logger.log(m["a"].Error,e),this._stopPromise=this._stopInternal(new Error(e))}}else this._logger.log(m["a"].Warning,`No client method with the name '${e.target}' found.`)}_connectionClosed(e){this._logger.log(m["a"].Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===N.Disconnecting?this._completeClose(e):this._connectionState===N.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===N.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=N.Disconnected,this._connectionStarted=!1,w["c"].isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(m["a"].Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let o=0,n=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),r=this._getNextRetryDelay(o++,0,n);if(null===r)return this._logger.log(m["a"].Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this._completeClose(e);if(this._connectionState=N.Reconnecting,e?this._logger.log(m["a"].Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(m["a"].Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach(t=>t.apply(this,[e]))}catch(s){this._logger.log(m["a"].Error,`An onreconnecting callback called with error '${e}' threw error '${s}'.`)}if(this._connectionState!==N.Reconnecting)return void this._logger.log(m["a"].Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}while(null!==r){if(this._logger.log(m["a"].Information,`Reconnect attempt number ${o} will start in ${r} ms.`),await new Promise(e=>{this._reconnectDelayHandle=setTimeout(e,r)}),this._reconnectDelayHandle=void 0,this._connectionState!==N.Reconnecting)return void this._logger.log(m["a"].Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this._startInternal(),this._connectionState=N.Connected,this._logger.log(m["a"].Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach(e=>e.apply(this,[this.connection.connectionId]))}catch(s){this._logger.log(m["a"].Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${s}'.`)}return}catch(s){if(this._logger.log(m["a"].Information,`Reconnect attempt failed because of error '${s}'.`),this._connectionState!==N.Reconnecting)return this._logger.log(m["a"].Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this._connectionState===N.Disconnecting&&this._completeClose());n=s instanceof Error?s:new Error(s.toString()),r=this._getNextRetryDelay(o++,Date.now()-t,n)}}this._logger.log(m["a"].Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${o} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,o){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:o})}catch(n){return this._logger.log(m["a"].Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${n}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(o=>{const n=t[o];try{n(null,e)}catch(r){this._logger.log(m["a"].Error,`Stream 'error' callback called with '${e}' threw error: ${Object(w["g"])(r)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,o,n){if(o)return 0!==n.length?{arguments:t,streamIds:n,target:e,type:M.Invocation}:{arguments:t,target:e,type:M.Invocation};{const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:M.Invocation}:{arguments:t,invocationId:o.toString(),target:e,type:M.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const o in e)e[o].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(o)))},error:e=>{let n;n=e instanceof Error?e.message:e&&e.toString?e.toString():"Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(o,n)))},next:e=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(o,e)))}})}}_replaceStreamingParams(e){const t=[],o=[];for(let n=0;n<e.length;n++){const r=e[n];if(this._isObservable(r)){const s=this._invocationId;this._invocationId++,t[s]=r,o.push(s.toString()),e.splice(n,1)}}return[t,o]}_isObservable(e){return e&&e.subscribe&&"function"===typeof e.subscribe}_createStreamInvocation(e,t,o){const n=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:n.toString(),streamIds:o,target:e,type:M.StreamInvocation}:{arguments:t,invocationId:n.toString(),target:e,type:M.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:M.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:M.StreamItem}}_createCompletionMessage(e,t,o){return t?{error:t,invocationId:e,type:M.Completion}:{invocationId:e,result:o,type:M.Completion}}}var q=o("bf71");const F="json";class U{constructor(){this.name=F,this.version=1,this.transferFormat=f.Text}parseMessages(e,t){if("string"!==typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=q["a"].instance);const o=j.parse(e),n=[];for(const r of o){const e=JSON.parse(r);if("number"!==typeof e.type)throw new Error("Invalid payload.");switch(e.type){case M.Invocation:this._isInvocationMessage(e);break;case M.StreamItem:this._isStreamItemMessage(e);break;case M.Completion:this._isCompletionMessage(e);break;case M.Ping:break;case M.Close:break;default:t.log(m["a"].Information,"Unknown message type '"+e.type+"' ignored.");continue}n.push(e)}return n}writeMessage(e){return j.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if("string"!==typeof e||""===e)throw new Error(t)}}const B={trace:m["a"].Trace,debug:m["a"].Debug,info:m["a"].Information,information:m["a"].Information,warn:m["a"].Warning,warning:m["a"].Warning,error:m["a"].Error,critical:m["a"].Critical,none:m["a"].None};function z(e){const t=B[e.toLowerCase()];if("undefined"!==typeof t)return t;throw new Error("Unknown log level: "+e)}class J{configureLogging(e){if(w["a"].isRequired(e,"logging"),X(e))this.logger=e;else if("string"===typeof e){const t=z(e);this.logger=new w["b"](t)}else this.logger=new w["b"](e);return this}withUrl(e,t){return w["a"].isRequired(e,"url"),w["a"].isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"===typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return w["a"].isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new r(e):this.reconnectPolicy=e:this.reconnectPolicy=new r,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new x(this.url,e);return O.create(t,this.logger||q["a"].instance,this.protocol||new U,this.reconnectPolicy)}}function X(e){return void 0!==e.log}},bf71:function(e,t,o){"use strict";o.d(t,"a",(function(){return n}));class n{constructor(){}log(e,t){}}n.instance=new n},f874:function(e,t,o){"use strict";var n=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"\n    relative\n    z-10\n    flex-shrink-0\n    h-16\n    w-full\n    border-b border-gray-200\n    flex\n  "},[o("button",{staticClass:"\n      border-r border-gray-200\n      px-4\n      text-gray-500\n      focus:outline-none\n      focus:ring-2 focus:ring-inset focus:ring-indigo-500\n      md:hidden\n    ",on:{click:function(t){e.toggleMenu=!e.toggleMenu}}},[o("span",{staticClass:"sr-only"},[e._v("Open sidebar")]),o("svg",{staticClass:"h-6 w-6",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor","aria-hidden":"true"}},[o("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M4 6h16M4 12h16M4 18h7"}})])]),o("div",{staticClass:"flex-1 flex justify-between items-center px-4 md:px-0"},[e.roles.includes("d")?o("router-link",{staticClass:"border border-black duration-300 bg-white px-4 py-2 rounded-md text-gray-900 font-bold hover:bg-green-600 hover:text-white focus:outline-none",attrs:{to:{name:"sent-add"}}},[e._v(" إضافة بريد جديد + ")]):e._e(),o("div",{staticClass:"relative md:mr-6 ml-4"},[o("div",[o("button",{staticClass:"\n            max-w-xs\n            flex\n            items-center\n            text-sm\n            rounded-full\n            focus:outline-none\n            focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\n          ",attrs:{type:"button",id:"user-menu-button","aria-expanded":"false","aria-haspopup":"true"},on:{click:e.Logout}},[o("span",{staticClass:"sr-only"},[e._v("Logout")]),o("svg",{staticClass:"w-6 h-6",attrs:{fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"}},[o("path",{attrs:{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"{2}",d:"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"}})])])]),e.userProcedure?o("div",{staticClass:"\n          origin-top-left\n          absolute\n          left-0\n          mt-2\n          w-48\n          rounded-md\n          shadow-lg\n          bg-white\n          ring-1 ring-black ring-opacity-5\n          py-1\n          focus:outline-none\n        ",attrs:{role:"menu","aria-orientation":"vertical","aria-labelledby":"user-menu-button",tabindex:"-1"}},[o("a",{staticClass:"block py-2 px-4 text-sm text-gray-700",attrs:{href:"#",role:"menuitem",tabindex:"-1",id:"user-menu-item-0"}},[e._v("الملف الشخصي")]),o("a",{staticClass:"block py-2 px-4 text-sm text-gray-700",attrs:{href:"#",role:"menuitem",tabindex:"-1",id:"user-menu-item-1"}},[e._v("الإعدادات")]),o("a",{staticClass:"block py-2 px-4 text-sm text-gray-700",attrs:{href:"#",role:"menuitem",tabindex:"-1",id:"user-menu-item-2"}},[e._v("خروج")])]):e._e()])],1)])},r=[],s={mounted:function(){null==localStorage.getItem("AY_LW")&&this.$router.push("/");var e=new Date;this.year=e.getFullYear(),this.my_user_id=localStorage.getItem("AY_LW"),this.my_department_id=localStorage.getItem("chrome"),this.roles=localStorage.getItem("Az07")},data:function(){return{roles:[],my_user_id:"",my_department_id:"",year:"",userProcedure:!1,toggleMenu:!1,searchMenu:!1,closeSearchMenu:!1,searchFor:"",resultOfSearch:"",finacial_recipt_number:{},transaction_number:{},mailType:1}},methods:{Logout:function(){localStorage.removeItem("AY_LW"),localStorage.removeItem("chrome"),localStorage.removeItem("Az07"),this.$router.push("/")},search:function(){var e=this;if(this.closeSearchMenu=!0,""==this.searchFor)return this.searchMenu=!1,void(this.closeSearchMenu=!1);this.searchMenu=!0;var t=this.searchFor;this.$http.TransactionsService.ayoub(t).then((function(t){e.resultOfSearch=t.data,e.finacial_recipt_number=e.resultOfSearch.finacial_recipt_number,e.transaction_number=e.resultOfSearch.transaction_number,0==e.finacial_recipt_number&&0==e.transaction_number&&(e.searchMenu=!1)})).catch((function(e){console.log(e)}))},canselSearch:function(){this.searchFor="",this.searchMenu=!1,this.closeSearchMenu=!1},toggle_menu:function(){document.querySelector("#overlay").classList.toggle("hidden"),document.body.classList.toggle("overflow-y-hidden"),document.getElementById("menu").classList.toggle("hidden")},toggle_search:function(){document.querySelector("#overlaySearch").classList.toggle("hidden"),document.body.classList.toggle("overflow-y-hidden"),document.getElementById("searchMobile").classList.toggle("hidden")}}},i=s,a=o("2877"),c=Object(a["a"])(i,n,r,!1,null,null,null);t["a"]=c.exports}}]);
//# sourceMappingURL=dashboard~mail.78acbfdc.js.map